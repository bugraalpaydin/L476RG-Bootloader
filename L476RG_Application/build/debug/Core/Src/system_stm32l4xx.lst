ARM GAS  /tmp/ccHz1fsC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32l4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/system_stm32l4xx.c"
  20              		.section	.text.SystemInit,"ax",%progbits
  21              		.align	1
  22              		.global	SystemInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	SystemInit:
  28              	.LFB132:
   1:Core/Src/system_stm32l4xx.c **** /**
   2:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l4xx.c ****   *
   7:Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l4xx.c ****   *   user application:
   9:Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Core/Src/system_stm32l4xx.c ****   *
  13:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l4xx.c ****   *
  17:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l4xx.c ****   *
  21:Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l4xx.c ****   *
  25:Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
ARM GAS  /tmp/ccHz1fsC.s 			page 2


  31:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Core/Src/system_stm32l4xx.c ****   * @attention
  68:Core/Src/system_stm32l4xx.c ****   *
  69:Core/Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:Core/Src/system_stm32l4xx.c ****   * All rights reserved.
  71:Core/Src/system_stm32l4xx.c ****   *
  72:Core/Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:Core/Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:Core/Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:Core/Src/system_stm32l4xx.c ****   *
  76:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  77:Core/Src/system_stm32l4xx.c ****   */
  78:Core/Src/system_stm32l4xx.c **** 
  79:Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:Core/Src/system_stm32l4xx.c ****   * @{
  81:Core/Src/system_stm32l4xx.c ****   */
  82:Core/Src/system_stm32l4xx.c **** 
  83:Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:Core/Src/system_stm32l4xx.c ****   * @{
  85:Core/Src/system_stm32l4xx.c ****   */
  86:Core/Src/system_stm32l4xx.c **** 
  87:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
ARM GAS  /tmp/ccHz1fsC.s 			page 3


  88:Core/Src/system_stm32l4xx.c ****   * @{
  89:Core/Src/system_stm32l4xx.c ****   */
  90:Core/Src/system_stm32l4xx.c **** 
  91:Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:Core/Src/system_stm32l4xx.c **** 
  93:Core/Src/system_stm32l4xx.c **** /**
  94:Core/Src/system_stm32l4xx.c ****   * @}
  95:Core/Src/system_stm32l4xx.c ****   */
  96:Core/Src/system_stm32l4xx.c **** 
  97:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:Core/Src/system_stm32l4xx.c ****   * @{
  99:Core/Src/system_stm32l4xx.c ****   */
 100:Core/Src/system_stm32l4xx.c **** 
 101:Core/Src/system_stm32l4xx.c **** /**
 102:Core/Src/system_stm32l4xx.c ****   * @}
 103:Core/Src/system_stm32l4xx.c ****   */
 104:Core/Src/system_stm32l4xx.c **** 
 105:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:Core/Src/system_stm32l4xx.c ****   * @{
 107:Core/Src/system_stm32l4xx.c ****   */
 108:Core/Src/system_stm32l4xx.c **** 
 109:Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:Core/Src/system_stm32l4xx.c **** 
 113:Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:Core/Src/system_stm32l4xx.c **** 
 117:Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:Core/Src/system_stm32l4xx.c **** 
 121:Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:Core/Src/system_stm32l4xx.c ****          configuration. */
 123:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:Core/Src/system_stm32l4xx.c **** #define USER_VECT_TAB_ADDRESS 
 127:Core/Src/system_stm32l4xx.c **** 
 128:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:Core/Src/system_stm32l4xx.c **** 
 133:Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00400000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32l4xx.c **** #else
 139:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x0040000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
 144:Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
ARM GAS  /tmp/ccHz1fsC.s 			page 4


 145:Core/Src/system_stm32l4xx.c **** 
 146:Core/Src/system_stm32l4xx.c **** /******************************************************************************/
 147:Core/Src/system_stm32l4xx.c **** /**
 148:Core/Src/system_stm32l4xx.c ****   * @}
 149:Core/Src/system_stm32l4xx.c ****   */
 150:Core/Src/system_stm32l4xx.c **** 
 151:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:Core/Src/system_stm32l4xx.c ****   * @{
 153:Core/Src/system_stm32l4xx.c ****   */
 154:Core/Src/system_stm32l4xx.c **** 
 155:Core/Src/system_stm32l4xx.c **** /**
 156:Core/Src/system_stm32l4xx.c ****   * @}
 157:Core/Src/system_stm32l4xx.c ****   */
 158:Core/Src/system_stm32l4xx.c **** 
 159:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:Core/Src/system_stm32l4xx.c ****   * @{
 161:Core/Src/system_stm32l4xx.c ****   */
 162:Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:Core/Src/system_stm32l4xx.c ****   */
 170:Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:Core/Src/system_stm32l4xx.c **** 
 172:Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:Core/Src/system_stm32l4xx.c **** /**
 177:Core/Src/system_stm32l4xx.c ****   * @}
 178:Core/Src/system_stm32l4xx.c ****   */
 179:Core/Src/system_stm32l4xx.c **** 
 180:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:Core/Src/system_stm32l4xx.c ****   * @{
 182:Core/Src/system_stm32l4xx.c ****   */
 183:Core/Src/system_stm32l4xx.c **** 
 184:Core/Src/system_stm32l4xx.c **** /**
 185:Core/Src/system_stm32l4xx.c ****   * @}
 186:Core/Src/system_stm32l4xx.c ****   */
 187:Core/Src/system_stm32l4xx.c **** 
 188:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:Core/Src/system_stm32l4xx.c ****   * @{
 190:Core/Src/system_stm32l4xx.c ****   */
 191:Core/Src/system_stm32l4xx.c **** 
 192:Core/Src/system_stm32l4xx.c **** /**
 193:Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:Core/Src/system_stm32l4xx.c ****   * @retval None
 195:Core/Src/system_stm32l4xx.c ****   */
 196:Core/Src/system_stm32l4xx.c **** 
 197:Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 198:Core/Src/system_stm32l4xx.c **** {
  29              		.loc 1 198 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccHz1fsC.s 			page 5


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 199:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
  34              		.loc 1 201 3 view .LVU1
  35              		.loc 1 201 13 is_stmt 0 view .LVU2
  36 0000 044B     		ldr	r3, .L2
  37 0002 054A     		ldr	r2, .L2+4
  38 0004 9A60     		str	r2, [r3, #8]
 202:Core/Src/system_stm32l4xx.c **** #endif
 203:Core/Src/system_stm32l4xx.c **** 
 204:Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  39              		.loc 1 206 3 is_stmt 1 view .LVU3
  40              		.loc 1 206 6 is_stmt 0 view .LVU4
  41 0006 D3F88820 		ldr	r2, [r3, #136]
  42              		.loc 1 206 14 view .LVU5
  43 000a 42F47002 		orr	r2, r2, #15728640
  44 000e C3F88820 		str	r2, [r3, #136]
 207:Core/Src/system_stm32l4xx.c **** #endif
 208:Core/Src/system_stm32l4xx.c **** }
  45              		.loc 1 208 1 view .LVU6
  46 0012 7047     		bx	lr
  47              	.L3:
  48              		.align	2
  49              	.L2:
  50 0014 00ED00E0 		.word	-536810240
  51 0018 00000408 		.word	134479872
  52              		.cfi_endproc
  53              	.LFE132:
  55              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  56              		.align	1
  57              		.global	SystemCoreClockUpdate
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  62              	SystemCoreClockUpdate:
  63              	.LFB133:
 209:Core/Src/system_stm32l4xx.c **** 
 210:Core/Src/system_stm32l4xx.c **** /**
 211:Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:Core/Src/system_stm32l4xx.c ****   *         other parameters.
 215:Core/Src/system_stm32l4xx.c ****   *
 216:Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:Core/Src/system_stm32l4xx.c ****   *
 220:Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:Core/Src/system_stm32l4xx.c ****   *
 224:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:Core/Src/system_stm32l4xx.c ****   *
ARM GAS  /tmp/ccHz1fsC.s 			page 6


 226:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:Core/Src/system_stm32l4xx.c ****   *
 228:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:Core/Src/system_stm32l4xx.c ****   *
 230:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 231:Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:Core/Src/system_stm32l4xx.c ****   *
 233:Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 234:Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:Core/Src/system_stm32l4xx.c ****   *
 237:Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:Core/Src/system_stm32l4xx.c ****   *
 241:Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 244:Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 245:Core/Src/system_stm32l4xx.c ****   *
 246:Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:Core/Src/system_stm32l4xx.c ****   *
 249:Core/Src/system_stm32l4xx.c ****   * @retval None
 250:Core/Src/system_stm32l4xx.c ****   */
 251:Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:Core/Src/system_stm32l4xx.c **** {
  64              		.loc 1 252 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 253:Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
  69              		.loc 1 253 3 view .LVU8
 254:Core/Src/system_stm32l4xx.c **** 
 255:Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  70              		.loc 1 256 3 view .LVU9
  71              		.loc 1 256 11 is_stmt 0 view .LVU10
  72 0000 2F4B     		ldr	r3, .L19
  73 0002 1B68     		ldr	r3, [r3]
  74              		.loc 1 256 6 view .LVU11
  75 0004 13F0080F 		tst	r3, #8
  76 0008 16D1     		bne	.L5
 257:Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  77              		.loc 1 258 5 is_stmt 1 view .LVU12
  78              		.loc 1 258 20 is_stmt 0 view .LVU13
  79 000a 2D4B     		ldr	r3, .L19
  80 000c D3F89430 		ldr	r3, [r3, #148]
  81              		.loc 1 258 14 view .LVU14
  82 0010 C3F30323 		ubfx	r3, r3, #8, #4
  83              	.LVL0:
  84              	.L6:
 259:Core/Src/system_stm32l4xx.c ****   }
 260:Core/Src/system_stm32l4xx.c ****   else
 261:Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
ARM GAS  /tmp/ccHz1fsC.s 			page 7


 262:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 263:Core/Src/system_stm32l4xx.c ****   }
 264:Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  85              		.loc 1 265 3 is_stmt 1 view .LVU15
  86              		.loc 1 265 12 is_stmt 0 view .LVU16
  87 0014 2B4A     		ldr	r2, .L19+4
  88 0016 52F82320 		ldr	r2, [r2, r3, lsl #2]
  89              	.LVL1:
 266:Core/Src/system_stm32l4xx.c **** 
 267:Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  90              		.loc 1 268 3 is_stmt 1 view .LVU17
  91              		.loc 1 268 14 is_stmt 0 view .LVU18
  92 001a 294B     		ldr	r3, .L19
  93 001c 9B68     		ldr	r3, [r3, #8]
  94              		.loc 1 268 21 view .LVU19
  95 001e 03F00C03 		and	r3, r3, #12
  96              		.loc 1 268 3 view .LVU20
  97 0022 0C2B     		cmp	r3, #12
  98 0024 3ED8     		bhi	.L7
  99 0026 DFE803F0 		tbb	[pc, r3]
 100              	.L9:
 101 002a 0C       		.byte	(.L12-.L9)/2
 102 002b 3D       		.byte	(.L7-.L9)/2
 103 002c 3D       		.byte	(.L7-.L9)/2
 104 002d 3D       		.byte	(.L7-.L9)/2
 105 002e 0F       		.byte	(.L11-.L9)/2
 106 002f 3D       		.byte	(.L7-.L9)/2
 107 0030 3D       		.byte	(.L7-.L9)/2
 108 0031 3D       		.byte	(.L7-.L9)/2
 109 0032 13       		.byte	(.L10-.L9)/2
 110 0033 3D       		.byte	(.L7-.L9)/2
 111 0034 3D       		.byte	(.L7-.L9)/2
 112 0035 3D       		.byte	(.L7-.L9)/2
 113 0036 17       		.byte	(.L8-.L9)/2
 114              	.LVL2:
 115 0037 00       		.p2align 1
 116              	.L5:
 262:Core/Src/system_stm32l4xx.c ****   }
 117              		.loc 1 262 5 is_stmt 1 view .LVU21
 262:Core/Src/system_stm32l4xx.c ****   }
 118              		.loc 1 262 20 is_stmt 0 view .LVU22
 119 0038 214B     		ldr	r3, .L19
 120 003a 1B68     		ldr	r3, [r3]
 262:Core/Src/system_stm32l4xx.c ****   }
 121              		.loc 1 262 14 view .LVU23
 122 003c C3F30313 		ubfx	r3, r3, #4, #4
 123 0040 E8E7     		b	.L6
 124              	.LVL3:
 125              	.L12:
 269:Core/Src/system_stm32l4xx.c ****   {
 270:Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 126              		.loc 1 271 7 is_stmt 1 view .LVU24
 127              		.loc 1 271 23 is_stmt 0 view .LVU25
 128 0042 214B     		ldr	r3, .L19+8
ARM GAS  /tmp/ccHz1fsC.s 			page 8


 129 0044 1A60     		str	r2, [r3]
 272:Core/Src/system_stm32l4xx.c ****       break;
 130              		.loc 1 272 7 is_stmt 1 view .LVU26
 131 0046 2FE0     		b	.L13
 132              	.L11:
 273:Core/Src/system_stm32l4xx.c **** 
 274:Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 133              		.loc 1 275 7 view .LVU27
 134              		.loc 1 275 23 is_stmt 0 view .LVU28
 135 0048 1F4B     		ldr	r3, .L19+8
 136 004a 204A     		ldr	r2, .L19+12
 137              	.LVL4:
 138              		.loc 1 275 23 view .LVU29
 139 004c 1A60     		str	r2, [r3]
 276:Core/Src/system_stm32l4xx.c ****       break;
 140              		.loc 1 276 7 is_stmt 1 view .LVU30
 141 004e 2BE0     		b	.L13
 142              	.LVL5:
 143              	.L10:
 277:Core/Src/system_stm32l4xx.c **** 
 278:Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 144              		.loc 1 279 7 view .LVU31
 145              		.loc 1 279 23 is_stmt 0 view .LVU32
 146 0050 1D4B     		ldr	r3, .L19+8
 147 0052 1F4A     		ldr	r2, .L19+16
 148              	.LVL6:
 149              		.loc 1 279 23 view .LVU33
 150 0054 1A60     		str	r2, [r3]
 280:Core/Src/system_stm32l4xx.c ****       break;
 151              		.loc 1 280 7 is_stmt 1 view .LVU34
 152 0056 27E0     		b	.L13
 153              	.LVL7:
 154              	.L8:
 281:Core/Src/system_stm32l4xx.c **** 
 282:Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 283:Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:Core/Src/system_stm32l4xx.c ****          */
 286:Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 155              		.loc 1 286 7 view .LVU35
 156              		.loc 1 286 23 is_stmt 0 view .LVU36
 157 0058 194B     		ldr	r3, .L19
 158 005a D968     		ldr	r1, [r3, #12]
 159              		.loc 1 286 17 view .LVU37
 160 005c 01F00301 		and	r1, r1, #3
 161              	.LVL8:
 287:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 162              		.loc 1 287 7 is_stmt 1 view .LVU38
 163              		.loc 1 287 19 is_stmt 0 view .LVU39
 164 0060 DB68     		ldr	r3, [r3, #12]
 165              		.loc 1 287 49 view .LVU40
 166 0062 C3F30213 		ubfx	r3, r3, #4, #3
 167              		.loc 1 287 12 view .LVU41
 168 0066 0133     		adds	r3, r3, #1
 169              	.LVL9:
ARM GAS  /tmp/ccHz1fsC.s 			page 9


 288:Core/Src/system_stm32l4xx.c **** 
 289:Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 170              		.loc 1 289 7 is_stmt 1 view .LVU42
 171 0068 0229     		cmp	r1, #2
 172 006a 04D0     		beq	.L14
 173 006c 0329     		cmp	r1, #3
 174 006e 15D0     		beq	.L15
 290:Core/Src/system_stm32l4xx.c ****       {
 291:Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 293:Core/Src/system_stm32l4xx.c ****           break;
 294:Core/Src/system_stm32l4xx.c **** 
 295:Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 297:Core/Src/system_stm32l4xx.c ****           break;
 298:Core/Src/system_stm32l4xx.c **** 
 299:Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 175              		.loc 1 300 11 view .LVU43
 176              		.loc 1 300 18 is_stmt 0 view .LVU44
 177 0070 B2FBF3F2 		udiv	r2, r2, r3
 178              	.LVL10:
 301:Core/Src/system_stm32l4xx.c ****           break;
 179              		.loc 1 301 11 is_stmt 1 view .LVU45
 180 0074 02E0     		b	.L17
 181              	.LVL11:
 182              	.L14:
 292:Core/Src/system_stm32l4xx.c ****           break;
 183              		.loc 1 292 11 view .LVU46
 292:Core/Src/system_stm32l4xx.c ****           break;
 184              		.loc 1 292 18 is_stmt 0 view .LVU47
 185 0076 154A     		ldr	r2, .L19+12
 186              	.LVL12:
 292:Core/Src/system_stm32l4xx.c ****           break;
 187              		.loc 1 292 18 view .LVU48
 188 0078 B2FBF3F2 		udiv	r2, r2, r3
 189              	.LVL13:
 293:Core/Src/system_stm32l4xx.c **** 
 190              		.loc 1 293 11 is_stmt 1 view .LVU49
 191              	.L17:
 302:Core/Src/system_stm32l4xx.c ****       }
 303:Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 192              		.loc 1 303 7 view .LVU50
 193              		.loc 1 303 30 is_stmt 0 view .LVU51
 194 007c 1049     		ldr	r1, .L19
 195              	.LVL14:
 196              		.loc 1 303 30 view .LVU52
 197 007e CB68     		ldr	r3, [r1, #12]
 198              	.LVL15:
 199              		.loc 1 303 60 view .LVU53
 200 0080 C3F30623 		ubfx	r3, r3, #8, #7
 201              		.loc 1 303 14 view .LVU54
 202 0084 02FB03F3 		mul	r3, r2, r3
 203              	.LVL16:
 304:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 204              		.loc 1 304 7 is_stmt 1 view .LVU55
 205              		.loc 1 304 20 is_stmt 0 view .LVU56
ARM GAS  /tmp/ccHz1fsC.s 			page 10


 206 0088 CA68     		ldr	r2, [r1, #12]
 207              		.loc 1 304 50 view .LVU57
 208 008a C2F34162 		ubfx	r2, r2, #25, #2
 209              		.loc 1 304 58 view .LVU58
 210 008e 0132     		adds	r2, r2, #1
 211              		.loc 1 304 12 view .LVU59
 212 0090 5200     		lsls	r2, r2, #1
 213              	.LVL17:
 305:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 214              		.loc 1 305 7 is_stmt 1 view .LVU60
 215              		.loc 1 305 31 is_stmt 0 view .LVU61
 216 0092 B3FBF2F3 		udiv	r3, r3, r2
 217              	.LVL18:
 218              		.loc 1 305 23 view .LVU62
 219 0096 0C4A     		ldr	r2, .L19+8
 220              	.LVL19:
 221              		.loc 1 305 23 view .LVU63
 222 0098 1360     		str	r3, [r2]
 306:Core/Src/system_stm32l4xx.c ****       break;
 223              		.loc 1 306 7 is_stmt 1 view .LVU64
 224 009a 05E0     		b	.L13
 225              	.LVL20:
 226              	.L15:
 296:Core/Src/system_stm32l4xx.c ****           break;
 227              		.loc 1 296 11 view .LVU65
 296:Core/Src/system_stm32l4xx.c ****           break;
 228              		.loc 1 296 18 is_stmt 0 view .LVU66
 229 009c 0C4A     		ldr	r2, .L19+16
 230              	.LVL21:
 296:Core/Src/system_stm32l4xx.c ****           break;
 231              		.loc 1 296 18 view .LVU67
 232 009e B2FBF3F2 		udiv	r2, r2, r3
 233              	.LVL22:
 297:Core/Src/system_stm32l4xx.c **** 
 234              		.loc 1 297 11 is_stmt 1 view .LVU68
 235 00a2 EBE7     		b	.L17
 236              	.LVL23:
 237              	.L7:
 307:Core/Src/system_stm32l4xx.c **** 
 308:Core/Src/system_stm32l4xx.c ****     default:
 309:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 238              		.loc 1 309 7 view .LVU69
 239              		.loc 1 309 23 is_stmt 0 view .LVU70
 240 00a4 084B     		ldr	r3, .L19+8
 241 00a6 1A60     		str	r2, [r3]
 310:Core/Src/system_stm32l4xx.c ****       break;
 242              		.loc 1 310 7 is_stmt 1 view .LVU71
 243              	.LVL24:
 244              	.L13:
 311:Core/Src/system_stm32l4xx.c ****   }
 312:Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 245              		.loc 1 314 3 view .LVU72
 246              		.loc 1 314 28 is_stmt 0 view .LVU73
 247 00a8 054B     		ldr	r3, .L19
 248 00aa 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccHz1fsC.s 			page 11


 249              		.loc 1 314 52 view .LVU74
 250 00ac C3F30313 		ubfx	r3, r3, #4, #4
 251              		.loc 1 314 22 view .LVU75
 252 00b0 084A     		ldr	r2, .L19+20
 253 00b2 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 254              	.LVL25:
 315:Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 255              		.loc 1 316 3 is_stmt 1 view .LVU76
 256              		.loc 1 316 19 is_stmt 0 view .LVU77
 257 00b4 044A     		ldr	r2, .L19+8
 258 00b6 1368     		ldr	r3, [r2]
 259 00b8 CB40     		lsrs	r3, r3, r1
 260 00ba 1360     		str	r3, [r2]
 317:Core/Src/system_stm32l4xx.c **** }
 261              		.loc 1 317 1 view .LVU78
 262 00bc 7047     		bx	lr
 263              	.L20:
 264 00be 00BF     		.align	2
 265              	.L19:
 266 00c0 00100240 		.word	1073876992
 267 00c4 00000000 		.word	MSIRangeTable
 268 00c8 00000000 		.word	SystemCoreClock
 269 00cc 0024F400 		.word	16000000
 270 00d0 00127A00 		.word	8000000
 271 00d4 00000000 		.word	AHBPrescTable
 272              		.cfi_endproc
 273              	.LFE133:
 275              		.global	MSIRangeTable
 276              		.section	.rodata.MSIRangeTable,"a"
 277              		.align	2
 280              	MSIRangeTable:
 281 0000 A0860100 		.word	100000
 282 0004 400D0300 		.word	200000
 283 0008 801A0600 		.word	400000
 284 000c 00350C00 		.word	800000
 285 0010 40420F00 		.word	1000000
 286 0014 80841E00 		.word	2000000
 287 0018 00093D00 		.word	4000000
 288 001c 00127A00 		.word	8000000
 289 0020 0024F400 		.word	16000000
 290 0024 00366E01 		.word	24000000
 291 0028 0048E801 		.word	32000000
 292 002c 006CDC02 		.word	48000000
 293              		.global	APBPrescTable
 294              		.section	.rodata.APBPrescTable,"a"
 295              		.align	2
 298              	APBPrescTable:
 299 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
 299      01020304 
 300              		.global	AHBPrescTable
 301              		.section	.rodata.AHBPrescTable,"a"
 302              		.align	2
 305              	AHBPrescTable:
 306 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
 306      00000000 
 306      01020304 
ARM GAS  /tmp/ccHz1fsC.s 			page 12


 306      06
 307 000d 070809   		.ascii	"\007\010\011"
 308              		.global	SystemCoreClock
 309              		.section	.data.SystemCoreClock,"aw"
 310              		.align	2
 313              	SystemCoreClock:
 314 0000 00093D00 		.word	4000000
 315              		.text
 316              	.Letext0:
 317              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 318              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 319              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 320              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 321              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
ARM GAS  /tmp/ccHz1fsC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
     /tmp/ccHz1fsC.s:21     .text.SystemInit:00000000 $t
     /tmp/ccHz1fsC.s:27     .text.SystemInit:00000000 SystemInit
     /tmp/ccHz1fsC.s:50     .text.SystemInit:00000014 $d
     /tmp/ccHz1fsC.s:56     .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccHz1fsC.s:62     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccHz1fsC.s:101    .text.SystemCoreClockUpdate:0000002a $d
     /tmp/ccHz1fsC.s:266    .text.SystemCoreClockUpdate:000000c0 $d
     /tmp/ccHz1fsC.s:280    .rodata.MSIRangeTable:00000000 MSIRangeTable
     /tmp/ccHz1fsC.s:313    .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccHz1fsC.s:305    .rodata.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccHz1fsC.s:277    .rodata.MSIRangeTable:00000000 $d
     /tmp/ccHz1fsC.s:298    .rodata.APBPrescTable:00000000 APBPrescTable
     /tmp/ccHz1fsC.s:295    .rodata.APBPrescTable:00000000 $d
     /tmp/ccHz1fsC.s:302    .rodata.AHBPrescTable:00000000 $d
     /tmp/ccHz1fsC.s:310    .data.SystemCoreClock:00000000 $d
     /tmp/ccHz1fsC.s:115    .text.SystemCoreClockUpdate:00000037 $d
     /tmp/ccHz1fsC.s:115    .text.SystemCoreClockUpdate:00000038 $t

NO UNDEFINED SYMBOLS
